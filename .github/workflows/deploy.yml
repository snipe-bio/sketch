name: Build, Deploy, and Release to GitHub Pages

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    if: github.ref == 'refs/heads/main'  # Runs only on main branch pushes
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Build Script
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist  # Directory to deploy

      - name: Archive Built Website
        run: zip -r dist.zip dist  # Compress the dist directory

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-site
          path: dist.zip  # Upload the compressed dist.zip as an artifact

      - name: Extract Version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Sets the VERSION environment variable

      - name: Create Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"

      - name: Push Git Tag
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: built-site
          path: .

      - name: Extract Built Website
        run: unzip dist.zip -d dist 

      - name: Package Source Code
        run: git archive --format zip --output source.zip HEAD

      - name: Generate Changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:"- %s" >> CHANGELOG.md

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            source.zip
            dist.zip
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
