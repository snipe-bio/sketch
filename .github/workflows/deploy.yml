name: Build, Deploy, and Release to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' 

      - name: Install Dependencies
        run: npm install

      - name: Run Build Script
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist 

      - name: Archive Built Website
        run: zip -r dist.zip dist 

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-site
          path: dist.zip 

      - name: Extract Version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV 

  release:
    needs: build
    if: contains(github.event.head_commit.message, 'make-a-release')
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: built-site
          path: . 

      - name: Extract Built Website
        run: unzip dist.zip -d dist 

      - name: Package Source Code
        run: git archive --format zip --output source.zip HEAD 

      - name: Extract Version from package.json
        id: get_version_release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV 

      - name: Check if Release Already Exists
        id: check_release
        run: |
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.VERSION }}"
          RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $RELEASE_URL)
          if [[ "$RELEASE" != *"Not Found"* ]]; then
            echo "Release for version v${{ env.VERSION }} already exists."
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "No existing release for version v${{ env.VERSION }}."
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create Git Tag
        if: env.RELEASE_EXISTS != 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}" 

      - name: Generate Changelog
        if: env.RELEASE_EXISTS != 'true'
        run: |
          echo "# Changelog" > CHANGELOG.md
          git log --pretty=format:"- %s" >> CHANGELOG.md

      - name: Create GitHub Release
        if: env.RELEASE_EXISTS != 'true'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          files: |
            source.zip
            dist.zip
          body_path: CHANGELOG.md 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}